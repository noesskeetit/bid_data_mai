services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: postgres_db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5430:5432"
      - "4040:4040"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
      - ./create_sources_and_tables:/docker-entrypoint-initdb.d
      - ./data_for_sources:/data/csv
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  spark-notebook:
    image: jupyter/all-spark-notebook
    container_name: spark_notebook
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
    command: >
      start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''
    volumes:
      - ./notebook:/home/jovyan
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
    healthcheck:
      test: [ "CMD-SHELL", "curl -sSf http://localhost:8888 || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

volumes:
  pgdata:
    driver: local
